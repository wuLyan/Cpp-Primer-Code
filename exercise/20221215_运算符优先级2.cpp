//日期：20221215 
//内容：运算符优先级：圆括号 > 方括号 > 取内容运算符
//首先和圆括号结合，一定是函数；首先和方括号结合，一定是数组；首先和取内容运算符结合，一定是指针
//数组->指针：存放指针的数组；指针->数组：指向数组的指针；指针->函数：指向函数的指针；函数->指针：返回指针的函数。先出现的是主语，后出现的是定语
#include <iostream>

using namespace std;

int arr[10];

int (*fun1(int i))[10]; // 圆括号先和fun1结合，因此fun1一定是个函数
//fun1是一个函数，它有一个形参为int类型、返回值为指向拥有十个元素的整型数组的指针
//把函数名与其形参列表去掉就是函数的返回值类型，即使剩下的部分再别扭也是


int (*fun2)(int i); //取内容运算符先和fun2结合，因此fun2一定是个指针
//fun2是一个函数指针，指向有一个为形参int类型、返回值也为int类型的函数

int *fun3(int i); //fun3是一个函数，它有一个为形参int类型、返回值为int *类型

int (*fun4[10])(int i); 
//取内容运算符与方括号同在圆括号中，因此通过优先级判断方括号先和fun4结合，因此fun4一定是个数组
//fun4是一个有十个元素的数组，其中的每一个元素都是指针，都指向有一个形参为int类型、返回值也为int类型的函数

int main()
{
    int (*parr)[10]; //parr是指向拥有十个元素的数组的指针

    parr = fun1(2022);
    int *p = (int *)parr; //强制类型转换

    for (int i = 0; i < 10; i ++)
        cout << p[i] << " ";
    cout << endl;

    return 0;
}

int (*fun1(int i))[10]
{
    for (int j = 0; j < 10; j ++)
        arr[j] = i; //假设已经定义了名为arr的int类型的数组

    return &arr; //注意这里的返回值，要返回的是指向整个数组的指针
    // return arr; //这种写法返回的是指向数组第一个元素的指针
}